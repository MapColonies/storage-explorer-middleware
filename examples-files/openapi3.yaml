openapi: 3.0.1
info:
  title: storage-explorer
  description: Service to reflect folders stractures on server.
  version: 1.0.0
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

paths:
  /explorer/directory:
    get:
      summary: Gets directory content
      parameters:
        - in: query
          name: path
          schema:
            type: string
          description: Requested directory path suffix.
          allowReserved: true
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dirRes'
        400:
          description: BAD REQUEST
          content:
            text/html:
              schema:
                type: string
        404:
          description: NOT FOUND
          content:
            text/html:
              schema:
                type: string
        500:
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /explorer/directorybyid:
    get:
      summary: Gets directory content by id.
      parameters:
        - in: query
          name: id
          schema:
            type: string
          description: Requested directory id.
          allowReserved: true
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dirRes'
        500:
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /explorer/file:
    get:
      summary: Gets file content
      parameters:
        - in: query
          name: path
          schema:
            type: string
          description: Requested file path.
          allowReserved: true
          required: true

        - in: query
          name: buffersize
          schema:
            type: number
          description: Max buffer size for each data chunk in the stream, in bytes.
          required: false
      responses:
        200:
          description: OK
          content:
            'application/octet-stream':
              schema:
                type: object
                format: binary
        400:
          description: BAD REQUEST
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/res'
        404:
          description: NOT FOUND
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/res'
        500:
          description: INTERNAL SERVER ERROR
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/error'

    # post:
    #   summary: Upload file content to a specified path
    #   parameters:
    #     - in: query
    #       name: path
    #       schema:
    #         type: string
    #       description: The path on the server where the file will be stored.
    #       allowReserved: true
    #       required: true

    #     - in: query
    #       name: overwrite
    #       schema:
    #         type: boolean
    #       description: If file already exist, should overwrite the file or not.
    #       required: false

    #     - in: query
    #       name: buffersize
    #       schema:
    #         type: number
    #       description: Max buffer size for each data chunk in the stream, in bytes.
    #       required: false
    #   requestBody:
    #     required: true
    #     content:
    #       multipart/form-data:
    #         schema:
    #           type: object
    #           properties:
    #             file:
    #               type: string
    #               format: binary
    #           required:
    #             - file
    #       application/octet-stream:
    #         schema:
    #           type: string
    #           format: binary
    #   responses:
    #     201:
    #       description: CREATED
    #       content:
    #         'application/json':
    #           schema:
    #             type: object
    #             properties: {}
    #     400:
    #       description: BAD REQUEST
    #       content:
    #         'application/json':
    #           schema:
    #             $ref: '#/components/schemas/res'
    #     404:
    #       description: NOT FOUND
    #       content:
    #         'application/json':
    #           schema:
    #             $ref: '#/components/schemas/res'
    #     500:
    #       description: INTERNAL SERVER ERROR
    #       content:
    #         'application/json':
    #           schema:
    #             $ref: '#/components/schemas/error'

  /explorer/filebyid:
    get:
      summary: Gets file content by encrypted id
      parameters:
        - in: query
          name: id
          schema:
            type: string
          description: Requested file id.
          allowReserved: true
          required: true
      responses:
        200:
          description: OK
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/res'
        500:
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /explorer/decryptid:
    get:
      summary: Get decrypted id
      parameters:
        - in: query
          name: id
          schema:
            type: string
          description: id to decrypt.
          allowReserved: true
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/res'
        404:
          description: NOT FOUND
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/res'
        500:
          description: INTERNAL SERVER ERROR
          content:
            text/html:
              schema:
                type: string

components:
  schemas:
    res:
      type: object
      properties:
        data:
          oneOf:
            - type: object
            - type: string
    dirRes:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
          name:
            type: string
          isDir:
            type: boolean
          parentId:
            type: string
          modDate:
            type: string
            format: date-time
    error:
      type: object
      properties:
        error:
          type: string
